
--@@CONFIG.SQL

-- USERS

--------------------------------------------------

CREATE OR REPLACE VIEW RV_DIM_USER
AS
SELECT --U.ROWID AS USROWID,IR.ROWID AS IRROWID,
       USERTHINGTYPEID,USERID
FROM PF_USER U,
     RT_INFORMREP IR;

--------------------------------------------------

CREATE OR REPLACE VIEW RV_USERTYPE_REVS      
AS
SELECT --T.ROWID AS TROWID,IR.ROWID AS IRROWID,
       T.THINGTYPEID USERTYPEID, 
       T.THINGTYPEREVISIONNUMBER USERTYPEREV
FROM PF_THINGTYPE T, RT_INFORMREP IR
WHERE T.TYPEDESCRIPTION = 'User';


--------------------------------------------------

CREATE OR REPLACE VIEW RV_CUR_USERTYPE      
AS
SELECT USERTYPEID, COUNT(*) REVS,
       MAX(USERTYPEREV)	USERTYPEREV
FROM RV_USERTYPE_REVS
GROUP BY USERTYPEID;


--------------------------------------------------

CREATE OR REPLACE VIEW  RV_USERLIST_REVS      
AS
SELECT
      G.GROUPID,
      G.GROUPNAME,
      G.GROUPTYPENAME,
      UL.USERID,
  USERLISTREVISIONNUMBER as USERLISTREV,
  DECODE(ISMEMBEROF, 1,USERLISTREVISIONNUMBER,NULL) ISMEMBEROFREV
FROM PF_USERLIST UL,
    PF_GROUP G
WHERE G.GROUPID = UL.GROUPID;

--------------------------------------------------
--- table
CREATE OR REPLACE VIEW RV_USERLIST
AS
SELECT GROUPID,
       GROUPNAME,
       GROUPTYPENAME,
       USERID,
	   MAX(USERLISTREV) USERLISTREV,
	   MAX(ISMEMBEROFREV) ISMEMBEROFREV
FROM RV_USERLIST_REVS
GROUP BY GROUPID, GROUPNAME, GROUPTYPENAME, USERID;


PROMPT 
PROMPT ......... RT_USERLIST................
PROMPT

CREATE TABLE RT_USERLIST    
TABLESPACE &reviewTableSpace
AS
SELECT * FROM RV_USERLIST
where 2=1;


alter table RT_USERLIST
ADD (
     CREATEDDATETIME DATE,
     CREATEDBYUSERID NUMBER,
     MODIFIEDDATETIME DATE,
     MODIFIEDBYUSERID NUMBER );
		 
INSERT INTO RT_USERLIST 
SELECT FH.*, CAST(SYS_EXTRACT_UTC(SYSTIMESTAMP) AS DATE), 1, CAST(SYS_EXTRACT_UTC(SYSTIMESTAMP) AS DATE),1 
FROM RV_USERLIST FH;

COMMIT;		 

alter table RT_USERLIST
ADD CONSTRAINT RT_USERLIST_PK
PRIMARY KEY (USERID,GROUPID) USING INDEX TABLESPACE &reviewIndexTableSpace
ENABLE VALIDATE;

----------------------------------------------------------------

CREATE OR REPLACE VIEW  RV_USER_ITEMCONTEXT      
AS
SELECT --IC.ROWID AS ICROWID,REP.ROWID AS REPROWID,CUT.ROWID AS CUTROWID,
       USERTHINGTYPEID AS USERTYPEID,USERTYPEREV,CONTEXTID, 
       SUBJECTKEYID AS USERID, 
       CHAPTERID AS VISITID, CHAPTERINDEX AS VISITINDEX, 
       PAGEID AS FORMID, PAGEREVISIONNUMBER AS FORMREV, PAGEINDEX AS FORMINDEX, 
       SECTIONID, 
       ITEMSETID,SETITEMORDER AS ITEMSETINDEX,  
       ITEMID
FROM PF_ITEMCONTEXT IC,
     RT_INFORMREP REP,
     RV_CUR_USERTYPE CUT
WHERE USERTHINGTYPEID = SUBJECTKEYTYPE
AND USERTHINGTYPEID = USERTYPEID;



----------------------------------------------------------------

CREATE OR REPLACE VIEW RV_USER_PROPERTIES_REVS      
AS
SELECT --IC.ROWID AS ICROWID, ID.ROWID AS IDROWID, CID.ROWID AS CIDROWID, CD.ROWID AS CDROWID, TA.ROWID AS TAROWID,
       USERTYPEID,USERID, ID.AUDITORDER AS USERREV,
       DECODE(ID.AUDITORDER,MINAUDITORDER,1,0) AS FIRSTREV,
       DECODE(ID.AUDITORDER,MAXAUDITORDER,1,0) AS CURRENTREV,
       ATTRIBUTENAME,
       CONTROLVALUEID, VALUEORDER,
       DATATYPE, NUMVALUE, FLOATVALUE, STRVALUE, PFDATETIME,
       ENTEREDBY, ENTEREDDATE, ENTEREDREASON, TRANSACTIONID
FROM RV_USER_ITEMCONTEXT IC,
     PF_ITEMDATA ID,
     RV_DIM_ITEMDATA CID,
     PF_CONTROLDATA CD,
     PF_THINGTYPEATTRIBUTE TA
WHERE IC.CONTEXTID = ID.CONTEXTID
AND IC.CONTEXTID = CID.CONTEXTID
AND IC.CONTEXTID = CD.CONTEXTID
AND ID.AUDITORDER = CD.AUDITORDER
AND TA.THINGTYPEID = IC.USERTYPEID
AND TA.THINGTYPEREVISIONNUMBER = IC.USERTYPEREV
AND IC.VISITID = TA.CHAPTERID
AND IC.FORMID = TA.PAGEID
AND IC.SECTIONID = TA.SECTIONID
AND IC.ITEMID = TA.ITEMID;

----------------------------------------------------------------

CREATE OR REPLACE VIEW RV_USER_PROPERTIES     
AS
SELECT ID.SUBJECTTYPE USERTYPEID, ID.SUBJECTID USERID, ID.AUDITORDER AS USERREV, 1 AS CURRENTREV,
       TA.ATTRIBUTENAME,
       CD.DATATYPE, CD.NUMVALUE, CD.FLOATVALUE, CD.STRVALUE, CD.PFDATETIME,
       ID.ENTEREDBY, ID.LASTENTEREDDATE ENTEREDDATE, ID.ENTEREDREASON, ID.TRANSACTIONID
FROM RT_ITEMDATA_CONTEXT ID,
     RT_CONTROLDATA CD,
     PF_THINGTYPEATTRIBUTE TA
WHERE ID.SUBJECTTYPE = TA.THINGTYPEID
AND ID.CONTEXTID = CD.CONTEXTID
AND ID.AUDITORDER = CD.AUDITORDER
AND TA.THINGTYPEID = (SELECT MAX(THINGTYPEID) FROM PF_THINGTYPE WHERE TYPEDESCRIPTION = 'User')
AND TA.THINGTYPEREVISIONNUMBER = (SELECT MAX(THINGTYPEREVISIONNUMBER) FROM PF_THINGTYPE WHERE TYPEDESCRIPTION = 'User')
AND ID.VISITID = TA.CHAPTERID
AND ID.FORMID = TA.PAGEID
AND ID.SECTIONID = TA.SECTIONID
AND ID.ITEMID = TA.ITEMID;

----------------------------------------------------------------

CREATE OR REPLACE VIEW RV_CUR_USER_RIGHTSGROUP
AS
SELECT 
       UD.USERID,USERNAME,GROUPID,GROUPNAME
FROM PF_USER UD,
     RV_USERLIST UL
WHERE UD.USERID = UL.USERID
AND GROUPTYPENAME = 'FA3C6201-112E-11d2-8BED-0060082DE9D5' 
AND USERLISTREV = ISMEMBEROFREV;


----------------------------------------------------------------
---table

CREATE OR REPLACE VIEW RV_USER
AS
SELECT USERTYPEID,USERID,
       MAX(DECODE(CURRENTREV,1,USERREV,NULL)) AS USERREV,
       MAX(DECODE(CURRENTREV,1,ENTEREDDATE,NULL)) AS USERREVTIME,
       MIN(DECODE(CURRENTREV,1,DECODE(ATTRIBUTENAME,'UserName',ENTEREDDATE,NULL),NULL)) USERCREATETIME,
       MAX(DECODE(CURRENTREV,1,DECODE(ATTRIBUTENAME,'UserActiveState',ENTEREDDATE,NULL),NULL)) USERACTIVESTATETIME,
       MAX(DECODE(CURRENTREV,1,DECODE(ATTRIBUTENAME,'UserDeleteState',ENTEREDDATE,NULL),NULL)) USERDELETESTATETIME,
       MAX(DECODE(CURRENTREV,1,DECODE(ATTRIBUTENAME,'UserName',STRVALUE,NULL),NULL)) USERNAME,
       MAX(DECODE(CURRENTREV,1,DECODE(ATTRIBUTENAME,'UserActiveState',NUMVALUE,NULL),NULL)) USERACTIVESTATE,
       MAX(DECODE(CURRENTREV,1,DECODE(ATTRIBUTENAME,'UserAddress1',STRVALUE,NULL),NULL)) USERADDRESS1,
       MAX(DECODE(CURRENTREV,1,DECODE(ATTRIBUTENAME,'UserAddress2',STRVALUE,NULL),NULL)) USERADDRESS2,
       MAX(DECODE(CURRENTREV,1,DECODE(ATTRIBUTENAME,'UserAltPhoneNumber',STRVALUE,NULL),NULL)) USERALTPHONENUMBER,
       MAX(DECODE(CURRENTREV,1,DECODE(ATTRIBUTENAME,'UserAnswer',STRVALUE,NULL),NULL)) USERANSWER,
       MAX(DECODE(CURRENTREV,1,DECODE(ATTRIBUTENAME,'UserAuthType',STRVALUE,NULL),NULL)) USERAUTHTYPE,
       MAX(DECODE(CURRENTREV,1,DECODE(ATTRIBUTENAME,'UserCity',STRVALUE,NULL),NULL)) USERCITY,
       MAX(DECODE(CURRENTREV,1,DECODE(ATTRIBUTENAME,'UserConflict',NUMVALUE,NULL),NULL)) USERCONFLICT,
       MAX(DECODE(CURRENTREV,1,DECODE(ATTRIBUTENAME,'UserCountry',STRVALUE,NULL),NULL)) USERCOUNTRY,
       MAX(DECODE(CURRENTREV,1,DECODE(ATTRIBUTENAME,'UserDateFormat',NUMVALUE,NULL),NULL)) USERDATEFORMAT,
       MAX(DECODE(CURRENTREV,1,DECODE(ATTRIBUTENAME,'UserDayPhoneNumber',STRVALUE,NULL),NULL)) USERDAYPHONENUMBER,
       MAX(DECODE(CURRENTREV,1,DECODE(ATTRIBUTENAME,'UserDeleteState',NUMVALUE,NULL),NULL)) USERDELETESTATE,
       MAX(DECODE(CURRENTREV,1,DECODE(ATTRIBUTENAME,'UserDescription',STRVALUE,NULL),NULL)) USERDESCRIPTION,
       MAX(DECODE(CURRENTREV,1,DECODE(ATTRIBUTENAME,'UserDisplayName',STRVALUE,NULL),NULL)) USERDISPLAYNAME,
       MAX(DECODE(CURRENTREV,1,DECODE(ATTRIBUTENAME,'UserEmailAddress',STRVALUE,NULL),NULL)) USEREMAILADDRESS,
       MAX(DECODE(CURRENTREV,1,DECODE(ATTRIBUTENAME,'UserFaxNumber',STRVALUE,NULL),NULL)) USERFAXNUMBER,
       MAX(DECODE(CURRENTREV,1,DECODE(ATTRIBUTENAME,'UserFirstName',STRVALUE,NULL),NULL)) USERFIRSTNAME,
       MAX(DECODE(CURRENTREV,1,DECODE(ATTRIBUTENAME,'UserHintQuestion',STRVALUE,NULL),NULL)) USERHINTQUESTION,
       MAX(DECODE(CURRENTREV,1,DECODE(ATTRIBUTENAME,'UserHomeScreenURL',STRVALUE,NULL),NULL)) USERHOMESCREENURL,
       MAX(DECODE(CURRENTREV,1,DECODE(ATTRIBUTENAME,'UserImageID',STRVALUE,NULL),NULL)) USERIMAGEID,
       MAX(DECODE(CURRENTREV,1,DECODE(ATTRIBUTENAME,'UserLastName',STRVALUE,NULL),NULL)) USERLASTNAME,
       MAX(DECODE(CURRENTREV,1,DECODE(ATTRIBUTENAME,'UserPostalCode',STRVALUE,NULL),NULL)) USERPOSTALCODE,
       MAX(DECODE(CURRENTREV,1,DECODE(ATTRIBUTENAME,'UserProductLocale',STRVALUE,NULL),NULL)) USERPRODUCTLOCALENAME,
       MAX((SELECT LANGUAGEID FROM PF_LANGUAGE WHERE LANGUAGENAME = DECODE(CURRENTREV,1,DECODE(ATTRIBUTENAME,'UserProductLocale',STRVALUE,NULL),NULL))) USERPRODUCTLOCALEID,       
       MAX(DECODE(CURRENTREV,1,DECODE(ATTRIBUTENAME,'UserResetPassword',NUMVALUE,NULL),NULL)) USERRESETPASSWORD,
       MAX(DECODE(CURRENTREV,1,DECODE(ATTRIBUTENAME,'UserStateProvince',STRVALUE,NULL),NULL)) USERSTATEPROVINCE,
       MAX(DECODE(CURRENTREV,1,DECODE(ATTRIBUTENAME,'UserStudyLocale',STRVALUE,NULL),NULL)) USERSTUDYLOCALENAME,
       MAX((SELECT LANGUAGEID FROM PF_LANGUAGE WHERE LANGUAGENAME = DECODE(CURRENTREV,1,DECODE(ATTRIBUTENAME,'UserStudyLocale',STRVALUE,NULL),NULL))) USERSTUDYLOCALEID,
       MAX(DECODE(CURRENTREV,1,DECODE(ATTRIBUTENAME,'UserTitle',STRVALUE,NULL),NULL)) USERTITLE,
       MAX(DECODE(CURRENTREV,1,DECODE(ATTRIBUTENAME,'UserType',NUMVALUE,0),NULL)) USERTYPE
FROM RV_USER_PROPERTIES UP
GROUP BY USERTYPEID,USERID;


PROMPT 
PROMPT ......... RT_USER................
PROMPT

--DROP TABLE RT_USER;
CREATE TABLE RT_USER
TABLESPACE &reviewTableSpace
AS 
SELECT CU.* 
FROM RV_USER CU
where 2=1;


alter table RT_USER
ADD (
     CREATEDDATETIME DATE,
     CREATEDBYUSERID NUMBER,
     MODIFIEDDATETIME DATE,
     MODIFIEDBYUSERID NUMBER );
		 
INSERT INTO RT_USER 
SELECT V.*, CAST(SYS_EXTRACT_UTC(SYSTIMESTAMP) AS DATE), 1, CAST(SYS_EXTRACT_UTC(SYSTIMESTAMP) AS DATE),1 
FROM RV_USER V;

COMMIT;

alter table RT_USER
ADD CONSTRAINT RT_USER_PK
PRIMARY KEY (USERID) USING INDEX TABLESPACE &reviewIndexTableSpace
ENABLE VALIDATE;



----------------------------------------------------------------
---table

CREATE OR REPLACE VIEW RV_USER_SITES
AS
SELECT 
       UL.USERID,UL.GROUPID AS SITEID,CU.GROUPID AS RIGHTSGROUPID,
       USERNAME,CU.GROUPNAME AS RIGHTSGROUP,
       SITEMNEMONIC,
       SITENAME,
       SITECOUNTRY
FROM RT_USERLIST UL,
     RV_CUR_USER_RIGHTSGROUP CU,
     RT_SITE CS
WHERE UL.USERID = CU.USERID
AND UL.GROUPID = SITEID
AND GROUPTYPENAME = 'A4D7B9A1-112E-11d2-8BED-0060082DE9D5' 
AND USERLISTREV = ISMEMBEROFREV;

--DROP TABLE RT_USER_SITES;

CREATE TABLE RT_USER_SITES
TABLESPACE &reviewTableSpace
AS 
SELECT US.*
FROM RV_USER_SITES US
where 2=1;

alter table rt_user_sites modify ( RIGHTSGROUP varchar2(1000) null);
alter table rt_user_sites modify ( RIGHTSGROUPID NUMBER null);

alter table RT_USER_SITES
ADD (
     CREATEDDATETIME DATE,
     CREATEDBYUSERID NUMBER,
     MODIFIEDDATETIME DATE,
     MODIFIEDBYUSERID NUMBER );
		 
INSERT INTO RT_USER_SITES 
SELECT V.*, CAST(SYS_EXTRACT_UTC(SYSTIMESTAMP) AS DATE), 1, CAST(SYS_EXTRACT_UTC(SYSTIMESTAMP) AS DATE),1 
FROM RV_USER_SITES V;

COMMIT;		 
     
alter table RT_USER_SITES
ADD CONSTRAINT RT_USER_SITES_PK
PRIMARY KEY (USERID,SITEID) USING INDEX TABLESPACE &reviewIndexTableSpace
ENABLE VALIDATE;

CREATE INDEX IRX_USER_SITES_02 ON RT_USER_SITES (SITEID, USERNAME) TABLESPACE &reviewIndexTableSpace;

CREATE INDEX IRX_USER_SITES_RIGHTSGROUP ON RT_USER_SITES (RIGHTSGROUP) TABLESPACE &reviewIndexTableSpace;




-- ITEM BLINDING PER USER

-- DEFAULT BLINDING FOR EACH ITEM

CREATE OR REPLACE VIEW RV_ITEM_DEFAULTBLIND
AS
SELECT USERID, SUBSTR(USERNAME,1,32) AS USERNAME,GROUPID,ITEMID, ITEMREVISIONNUMBER AS ITEMREV,
       DECODE(DISPLAYOVERRIDE,3,1,0) AS DEFAULTBLINDED
FROM RV_CUR_USER_RIGHTSGROUP URG, PF_ITEM  IR;

----------------------------------------------------------------
-- PER-RIGHTSGROUP BLINDING OVERRIDES

CREATE OR REPLACE VIEW RV_BLINDING_OVERRIDES
AS
SELECT RI1.RIGHTSGROUPID,
       RI1.ITEMGROUPID,
       II1.ITEMID,
       DECODE(RI1.DISPLAYOVERRIDETYPE,3,1,1,0,2,0,-1) AS RIGHTSGROUPBLINDED  -- 1 for blinded, 0 for not blinded, -1 for default 
FROM PF_RIGHTSGROUPITEMGROUPS RI1,
     PF_ITEMGROUPITEMS II1
WHERE RI1.ITEMGROUPLISTREVISIONNUMBER = (SELECT MAX (RI2.ITEMGROUPLISTREVISIONNUMBER)
                                       FROM PF_RIGHTSGROUPITEMGROUPS RI2
                                       WHERE RI2.ITEMGROUPID = RI1.ITEMGROUPID
                                       AND RI2.RIGHTSGROUPID = RI1.RIGHTSGROUPID)
AND RI1.ITEMGROUPID = II1.ITEMGROUPID
AND II1.ITEMLISTREVISIONNUMBER = (SELECT MAX (II2.ITEMLISTREVISIONNUMBER)
                                  FROM PF_ITEMGROUPITEMS II2
                                  WHERE II2.ITEMID = II1.ITEMID);

----------------------------------------------------------------

-- Both OVERRIDEITEMGROUPID and OVERRIDERIGHTSGROUPID will be NULL if the item is not in an override group for the users rights group
CREATE OR REPLACE VIEW RV_USER_BLINDED_ITEMS_REVS
AS
SELECT IDB.USERID,IDB.USERNAME,IDB.ITEMID,--COALESCE(RBI.RIGHTSGROUPBLINDED,IDB.DEFAULTBLINDED) AS ITEMBLINDED, 
DECODE(RBI.RIGHTSGROUPBLINDED, NULL, IDB.DEFAULTBLINDED, -1, IDB.DEFAULTBLINDED, 1, 1, 0, 0) AS ITEMBLINDED,
IDB.ITEMREV,
       RBI.RIGHTSGROUPID as OVERRIDERIGHTSGROUPID,RBI.ITEMGROUPID as OVERRIDEITEMGROUPID 
FROM RV_ITEM_DEFAULTBLIND IDB,
     RV_BLINDING_OVERRIDES RBI
WHERE IDB.GROUPID = RBI.RIGHTSGROUPID (+)
AND IDB.ITEMID = RBI.ITEMID (+);

CREATE OR REPLACE VIEW RV_USER_BLINDED_ITEMS
AS
SELECT UBI.USERID, UBI.USERNAME, UBI.ITEMID, UBI.ITEMBLINDED,UBI.OVERRIDERIGHTSGROUPID, UBI.OVERRIDEITEMGROUPID
FROM RV_USER_BLINDED_ITEMS_REVS UBI, 
     (SELECT ITEMID, ITEMREVISIONNUMBER FROM PF_ITEM I WHERE ITEMREVISIONNUMBER = (SELECT MAX(I2.ITEMREVISIONNUMBER) FROM PF_ITEM I2 WHERE I2.ITEMID=I.ITEMID)) CIM
where UBI.ITEMID = CIM.ITEMID
AND ITEMREV = cim.ITEMREVISIONNUMBER;

PROMPT 
PROMPT ......... RT_USER_BLINDED_ITEMS................
PROMPT

--drop table RT_USER_BLINDED_ITEMS

CREATE TABLE RT_USER_BLINDED_ITEMS
TABLESPACE &reviewTableSpace
AS
SELECT USERID,USERNAME,ITEMID,ITEMBLINDED
FROM RV_USER_BLINDED_ITEMS UBI
where 2=1;


alter table RT_USER_BLINDED_ITEMS
ADD (
     CREATEDDATETIME DATE,
     CREATEDBYUSERID NUMBER,
     MODIFIEDDATETIME DATE,
     MODIFIEDBYUSERID NUMBER );
		 
INSERT INTO RT_USER_BLINDED_ITEMS 
SELECT USERID,USERNAME,ITEMID,ITEMBLINDED, CAST(SYS_EXTRACT_UTC(SYSTIMESTAMP) AS DATE), 1, CAST(SYS_EXTRACT_UTC(SYSTIMESTAMP) AS DATE),1 
FROM RV_USER_BLINDED_ITEMS V;

COMMIT;		 


CREATE INDEX IX_USER_BLIND_ITEMS_01 ON RT_USER_BLINDED_ITEMS (USERNAME,ITEMID,ITEMBLINDED) TABLESPACE &reviewIndexTableSpace;

alter table RT_USER_BLINDED_ITEMS 
ADD CONSTRAINT RT_USER_BLINDED_ITEMS_PK
PRIMARY KEY (USERID,ITEMID) USING INDEX TABLESPACE &reviewIndexTableSpace
ENABLE VALIDATE;


create or replace view RV_USER_RIGHTS as
select userlist.userid, userlist.groupid as RightsGroupID, userlist.GroupName as RightsGroupName, RightsGroups.RightNumber from
(
select distinct ic.SubjectKeyID as RightsGroupID, cd.numvalue as RightNumber 
from pf_thingtypeattribute tta, pf_thingtype tt, pf_itemcontext ic, pf_itemdata id, pf_controldata cd
where tt.typename='FA3C6201-112E-11d2-8BED-0060082DE9D5'
and tt.thingtyperevisionnumber = (select max(tt2.thingtyperevisionnumber) from pf_thingtype tt2 where tt2.thingtypeid=tt.thingtypeid)
and tta.thingtypeid=tt.thingtypeid
and tta.thingtyperevisionnumber = tt.thingtyperevisionnumber
and tta.attributename= 'ListOfRights'
and ic.subjectkeytype=tta.thingtypeid
and ic.chapterid=tta.chapterid
and ic.pageid=tta.pageid
and ic.sectionid=tta.sectionid
and ic.itemid=tta.itemid
and ic.contextid=id.contextid
and id.auditorder = (select max(id2.auditorder) from pf_itemdata id2 where id2.contextid = id.contextid)
and cd.controlid = tta.control1id
and cd.contextid=ic.contextid
and cd.auditorder=id.auditorder 
) RightsGroups,
rt_userlist userlist
where userlist.grouptypename='FA3C6201-112E-11d2-8BED-0060082DE9D5'
and userlist.groupid=RightsGroups.RightsGroupID
;