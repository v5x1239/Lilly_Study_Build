/*
Eli Lilly and Company (required) - DSS
CODE NAME (required)              : DS017.sas
PROJECT NAME (required)           : I7S_MC_HBEH
DESCRIPTION (required)            : If status is Lost to follow-up, dates on rest of CRF must not be after the date of disposition.
SPECIFICATIONS (required)         : N/A
VALIDATION TYPE (required)        : Formal validation not required – study specific data verification report
INDEPENDENT REPLICATION (required): N/A
ORIGINAL CODE (required)          : N/A, this is the original code
COMPONENT CODE MODULES            : N/A
SOFTWARE/VERSION# (required)      : JReview 9.2.4
INFRASTRUCTURE                    : Database server-firehawk.am.lilly.com:PRD779
									SAS Server-firehawk.am.lilly.com
DATA INPUT                        : 
OUTPUT                            : CSV
SPECIAL INSTRUCTIONS              : N/A
-----------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------
DOCUMENTATION AND REVISION HISTORY SECTION (required):

       Author &
Ver# Validator        Code History Description
---- ------------     ------------------------------------------------------------------------
1.0  PremKumar     	  Original version of the code

/***********************************************************************/
/*************                Setup Section               **************/
/***********************************************************************/

*libname clntrial oracle dbprompt=yes defer=no path=prd934 access=READONLY schema=I7S_MC_HBEH;

Data DM;
set clntrial.dm1001c;
label SITEMNEMONIC = 'Site Number';
keep SITEMNEMONIC SUBJID;
run;
proc sort;
by SUBJID;
run;
PROC SQL;
CREATE TABLE DS AS SELECT SUBJID,DATEPART(DSSTDAT) AS DSSTDAT FORMAT DATE9.
FROM clntrial.DS1001
where page = 'DS1001_LF5'
ORDER BY SUBJID;
QUIT;
%MACRO DT(SET,PAGE,DT,DTL);
PROC SQL;
CREATE TABLE DSN AS SELECT SUBJID, DATEPART(&DT.) AS DATE FORMAT DATE9.,"&DTL." AS DATE_VARIABLE length = 25,PAGE
FROM clntrial.&SET.
WHERE PAGE = "&PAGE."
ORDER BY SUBJID;
QUIT;

PROC APPEND BASE = FINAL DATA = DSN;
RUN;
%MEND;

%DT(BR1001,BR1001_LF1,BRDAT,BRDAT_XP_BR_LIV);
%DT(CM1001,CM1001_LF2,CMSTDAT,CMSTDAT_CM);
%DT(CM1001,CM1001_LF2,CMENDAT,CMENDAT_CM);
%DT(AE3001B,AE3001_LF1,AEENDAT,AEENDAT_AE);
%DT(AE3001B,AE3001_LF1,AESTDAT,AESTDAT_AE);
%DT(CM3001,CM3001_LF1,CMENDAT,CMENDAT_CM_PCT_ACE);
%DT(CM3001,CM3001_LF1,CMSTDAT,CMSTDAT_CM_PCT_ACE);
%DT(DS1001,DS1001_LF5,DSSTDAT,DSSTDAT_DS_LTFU);
%DT(DS1001,DS1001_LF7,DSSTDAT,DSSTDAT_DS_SDWOV);
%DT(DS1001,DS1001_LF4,DSSTDAT,DSSTDAT_DS_SF);
%DT(DS1001,DS1001_LF6,DSSTDAT,DSSTDAT_DS_STUDY);
%DT(DS1001,DS1001_LF7,DTHDAT,DTHDAT_DS_SDWOV);
%DT(DS1001,DS1001_LF4,DTHDAT,DTHDAT_DS_SF);
%DT(DS1001,DS1001_LF6,DTHDAT,DTHDAT_DS_STUDY);
%DT(DS2001,DS2001_LF1,DSSTDAT,DSSTDAT_DS_IC);
%DT(DS2001,DS2001_LF3,DSSTDAT,DSSTDAT_DS_IC_ADD);
%DT(DS2001,DS2001_LF5,DSSTDAT,DSSTDAT_DS_ICCG);
%DT(EX1001,EX1001_LF5,EXENDAT,EXENDAT_EX_LD);
%DT(EX1001,EX1001_C1F1,EXENDAT,EXENDAT_EX_SD_INT1);
%DT(EX1001,EX1001_F6,EXSTDAT,EXSTDAT_EX_ADM);
%DT(EX1001,EX1001_LF4,EXSTDAT,EXSTDAT_EX_FD);
%DT(EX1001,EX1001_LF2,EXSTDAT,EXSTDAT_EX_PK);
%DT(EX1001,EX1001_C1F1,EXSTDAT,EXSTDAT_EX_SD_INT1);
%DT(LRSS1001,LRSS1001_LF1,LRSSASMDAT,LRSSASMDAT_from);
%DT(MH7001_P,MH7001_LF1,MHENDAT,MHENDAT_MH);
%DT(MH7001_P,MH7001_LF1,MHSTDAT,MHSTDAT_MH);
%DT(ML1001_P,ML1001_F1,MLSTDAT,MLSTDAT_MLPRIOR);
%DT(SAE2001A,SAE2001_LF1,SAEASMDAT,SAEASMDAT_SAE);
%DT(SAE2001A,SAE2001_LF1,SAEAWADAT,SAEAWADAT_SAE);
%DT(SFUQ3001,SFUQ3001_LF1,CEENDAT,CEENDAT_FA_SHFU);
%DT(SFUQ3001,SFUQ3001_LF1,CESTDAT,CESTDAT_FA_SHFU);
%DT(SV1001,SV1001_LF1,VISDAT,VISDAT_SV_DOV);
%DT(VS1001,VS1001_C4LF1,VSDAT,VSDAT_VS_ED);
%DT(VS1001,VS1001_C3LF1,VSDAT,VSDAT_VS_UNSCH);
%DT(VS1001,VS1001_F3,VSDAT,VSDAT_VS_V1);
%DT(VS1001,VS1001_LF1,VSDAT,VSDAT_VS_V2);
%DT(VS1001,VS1001_C1LF1,VSDAT,VSDAT_VS_V3);
%DT(VS1001,VS1001_C7LF1,VSDAT,VSDAT_VS_V3RETST);
%DT(VS1001,VS1001_C5LF1,VSDAT,VSDAT_VS_V47910);
%DT(VS1001,VS1001_C2LF1,VSDAT,VSDAT_VS_V801);
%DT(VS1001,VS1001_C6LF1,VSDAT,VSDAT_VS_V8V11);
%DT(CSS07001,CSS07001_F1,CSS0718A,CSS0718A_QS_CSSRSCHILDBSL);
%DT(CSS07001,CSS07001_F1,CSS0719A,CSS0719A_QS_CSSRSCHILDBSL);
%DT(CSS07001,CSS07001_F1,CSS0720A,CSS0720A_QS_CSSRSCHILDBSL);
%DT(CSS07001,CSS07001_F1,CSSASMDAT,CSSASMDAT_QS_CSSRSCHILDBSL);
%DT(CSS08001,CSS08001_F1,CSS0819A,CSS0819A_QS_CSSRSCHILD);
%DT(CSS08001,CSS08001_F1,CSSASMDAT,CSSASMDAT_QS_CSSRSCHILD);
%DT(DA1001_P,DA1001_LF1,DADAT_DISPAMT,DADAT_DA_DISPENSE);
%DT(DA1001_P,DA1001_LF2,DADAT_RETAMT,DADAT_DA_RETURN);
%DT(DVF2001_,DVF2001_F1,DVFASMDAT,DVFASMDAT_DVF);
%DT(HMPR1001,HMPR1001_LF1,PRSTDAT,PRSTDAT_PR_XP_HMPR);
%DT(HRFA1001,HRFA1001_LF1,HRFAASMDAT,HRFAASMDAT_QS_HRFA);
%DT(HRFA1001,HRFA1001_LF1,HRFAEXPDAT,HRFAEXPDAT_QS_HRFA);
%DT(HRFA1001,HRFA1001_LF1,HRFAPNENDAT,HRFAPNENDAT_QS_HRFA);
%DT(HRFA1001,HRFA1001_LF1,HRFAPNSTDAT,HRFAPNSTDAT_QS_HRFA);
%DT(HRFA1001,HRFA1001_LF1,HRFATRFDAT,HRFATRFDAT_QS_HRFA);
%DT(MHPRESP1,MHPRESP1001_LF3,MHENDAT,MHENDAT_MH_MHPRESP_LD);
%DT(MHPRESP1,MHPRESP1001_LF3,MHSTDAT,MHSTDAT_MH_MHPRESP_LD);
%DT(SAE2001_,SAE2001_LF1,SAEFUASMDAT,SAEFUASMDAT_SAE);
%DT(SAE2001_,SAE2001_LF1,SAEFUAWADAT,SAEFUAWADAT_SAE);
%DT(STRCRT10,STRCRT1001_F1,STRCRTASMDAT,STRCRTASMDAT_STRCRT);
%DT(SU1001_P,SU1001_LF2,SUENDAT,SUENDAT_SU_ALC);
%DT(SU3001_P,SU3001_LF2,SUENDAT,SUENDAT_SU_TOB);
%DT(SU5001_P,SU5001_LF1,SUASMDAT,SUASMDAT_SU_REC_DRUG);
%DT(SU5001_P,SU5001_L2,SUASMDAT,SUASMDAT_SU_REC_DRUG_CHG);
%DT(UPD1001_,UPD1001_F1,UPDASMDAT,UPDASMDAT_QS_UPD);
proc sort data = final;
by SUBJID;
run;
DATA FIN;
MERGE DS(IN = A) FINAL DM;
BY SUBJID;
IF A;
RUN;
DATA FINAL;
SET FIN;
IF DSSTDAT NE . AND DATE NE . AND DATE > DSSTDAT then fLAG = 'Date '||trim(DATE_VARIABLE)||' after Lost to follow-up date';
RUN;
PROC SQL;
CREATE TABLE DS017 AS SELECT SITEMNEMONIC, SUBJID, DSSTDAT 'Lost to follow-up date', DATE, DATE_VARIABLE, PAGE, flag FROM final;
QUIT;
ods csv file=&irfilcsv trantab=ascii;
  title1 "DS";
	title2 "If status is Lost to follow-up, dates on rest of CRF must not be after the date of disposition.";

proc print data=DS017 noobs label WIDTH=min;
    var _all_;
  run;

ods csv close;

data _null_;
file print;
if 0 then set DS017 nobs=NUM;
if NUM=0 then do;
        put /// @21 "There are no records found";
        end;
stop;
run;

